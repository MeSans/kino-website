MVC resource: (81)http://www.cs.unsyiah.ac.id/~frdaus/PenelusuranInformasi/File-Pdf/Professional%20ASP.NET%20MVC%205.pdf

C# resource: 
http://csharp.net-tutorials.com/reflection/the-right-type/

MVC Music Store tutorial. Has querying, administration CRUD and introduction to AJAX stuff

Not using entity framework looks painful and pointless
To install MVC 5 :
    Make sure my server has .net 4.5 on it.

To do:
    Move to gitlab
    C# refresher (specifically all the stuff .net introduces like IEnumerables)
    Learn how to connect local app to server on laptop for testing purposes.
    Explore deployment. The brutal copy thing is really painful.
    Work through the book.

Knowns:
    MVC5
    User-based authentification with authorization
    Project_readme can be deleted

User groups:
    Guest (guy who looks at site)
    Worker (guy who edits movies)
    Super-puper admin (guy who does what worker do and CRUDs workers)

Glossary:
    Cshtml -> html that has the razor(c#) stuff to be executed before being displayed


ELI5 MVC

Controller: Gets request (usually url), executes some custom code and returns a view.



The view is responsible for providing the user interface (UI) to the user. After the
controller has executed the appropriate logic for the requested URL, it delegates the
display to the view.
Unlike fi
le-based web frameworks, such as ASP.NET Web Forms and PHP, views are not themselves
directly accessible. You can’t point your browser to a view and have it render. Instead, a view is
always rendered by a controller, which provides the data the view will render

Controllers
within the MVC pattern are responsible for responding to user input, often mak-
ing changes to the model in response to user input. In this way, controllers in the MVC pattern
are concerned with the fl
ow of the application, working with data coming in, and providing
data going out to the relevant view.


The URL tells the routing mechanism
(which you’ll begin to explore in the next few chapters, and learn about in depth in Chapter 9) which
controller class to instantiate and which action method to call, and supplies the required arguments
to that method. The controller’s method then decides which view to use, and that view then renders
the HTML.




Good to know:
    Linq uses parametrized in the its internal sql, so it protects against sql injections.
    Virtual functions let entity framework hook into the classes. This let’s it know when it needs to issue updates to the database to keep the state consistent
    
C# pitfalls:
    Value types get default values on creation. So check values emptyness by myvalue.isEmpty()
    Garbage collection deletes objects asynchronously.
    Don’t free system resources like connection to files in destructors. Rather free them as soon as you are finished with them. Just use using like this:(calls dispose hell or high-water)
    using (FileStream myFile = File.OpenRead("foo.txt")) {
    myFile.Read(buffer, 0, 100);
  }
    Cast shit like this (something else)something. This throws InvalidCastException is impossible
    Just a motherfucking function: http://csharp.net-tutorials.com/csharp-3.0/extension-methods/
    
